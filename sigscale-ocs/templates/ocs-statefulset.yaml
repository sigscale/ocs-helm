kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ include "sigscale-ocs.fullname" . }}
  labels:
    {{- include "sigscale-ocs.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "sigscale-ocs.selectorLabels" . | nindent 6 }}
  serviceName: otp-ocs
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sigscale-ocs.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sigscale-ocs.serviceAccountName" . }}
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: ocs-init
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: ERLARGS
        {{- if .Values.ocsConfig.create }}
          value: {{ cat .Values.erlangArgs "-config config/sys" | quote }}
        {{- else }}
          value: {{ .Values.erlangArgs | quote }}
        {{- end }}
        - name: ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-otp-dist
              key: ERLANG_COOKIE
        stdin: true
        tty: true
        command:
        - bash
        - "-c"
        - |
          set -e
          [[ `hostname --fqdn` =~ (^.*)-([0-9]+)?.(.*)$ ]] || exit 1
          hostbase=${BASH_REMATCH[1]}
          ordinal=${BASH_REMATCH[2]}
          domain=${BASH_REMATCH[3]}
          if [[ ${ordinal} -eq 0 ]]; then
            bin/initialize
          else
            bin/join ocs@${hostbase}-$((--ordinal)).${domain}
          fi
        ports:
        - name: epmd
          protocol: TCP
          containerPort: 4369
        - name: erl-rpc
          protocol: TCP
          containerPort: 54861
        resources:
          {{- toYaml .Values.podResources | nindent 12 }}
        volumeMounts:
        - name: ocs-data
          mountPath: /home/otp/db
        - name: ocs-log
          mountPath: /home/otp/log
        {{- if .Values.ocsConfig.create }}
        - name: ocs-config
          mountPath: /home/otp/config
          readOnly: true
        {{- end }}
      containers:
      - name: ocs
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: ERLARGS
        {{- if .Values.ocsConfig.create }}
          value: {{ cat .Values.erlangArgs "-config config/sys" | quote }}
        {{- else }}
          value: {{ .Values.erlangArgs | quote }}
        {{- end }}
        - name: ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-otp-dist
              key: ERLANG_COOKIE
        stdin: true
        tty: true
        ports:
        - name: epmd
          protocol: TCP
          containerPort: 4369
        - name: erl-rpc
          protocol: TCP
          containerPort: 54861
        - name: diameter-acct
          protocol: {{ .Values.diameterAcctService.protocol }}
          containerPort: 3868
        - name: diameter-auth
          protocol: {{ .Values.diameterAcctService.protocol }}
          containerPort: 3869
        - name: radius-auth
          protocol: UDP
          containerPort: 1812
        - name: radius-acct
          protocol: UDP
          containerPort: 1813
        - name: rest
          protocol: TCP
          containerPort: 8080
        - name: snmp
          protocol: UDP
          containerPort: 4161
        volumeMounts:
        - name: ocs-data
          mountPath: /home/otp/db
        - name: ocs-log
          mountPath: /home/otp/log
        {{- if .Values.ocsConfig.create }}
        - name: ocs-config
          mountPath: /home/otp/config
          readOnly: true
        {{- end }}
        readinessProbe:
          httpGet:
            httpHeaders:
              - name: Accept
                value: application/health+json
              - name: Authorization
                value: Basic YWRtaW46YWRtaW4=
            path: /health
            port: rest
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 6
        resources:
          {{- toYaml .Values.podResources | nindent 12 }}
      {{- if .Values.ocsConfig.create }}
      volumes:
      - name: ocs-config
        configMap:
          name: {{ .Release.Name }}-ocs-config
          items:
          - key: "sys.config"
            path: "sys.config"
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: ocs-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.dataVolume.size }}
      {{- with .Values.dataVolume.class }}
      storageClassName: {{ .Values.dataVolume.class }}
      {{- end }}
  - metadata:
      name: ocs-log
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.dataVolume.size }}
      {{- with .Values.dataVolume.class }}
      storageClassName: {{ .Values.dataVolume.class }}
      {{- end }}
